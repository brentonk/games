#+TITLE: To-do list for games package
#+AUTHOR: Brenton Kenkel
#+EMAIL: brenton.kenkel@gmail.com
#+FILETAGS: :games:


* Publicity

- Email Polmeth listserv:
  - Link to paper on Curt's website
  - Mention that this is not the polywog software we mentioned at the Methods
    conference, but rather something for estimating structural models


* Bugs


* New features

- [ ] Bivariate probit


* Documentation



* Tweaks

** TODO Implement ~nobs~ method, introduced R 2.13.0

- [ ] Use tcrossprod(X, t(b)) everywhere instead of X %*% b

- [ ] Reduce duplication in predict methods; just pass ultimatum to its own
      thing and otherwise use switches for the others

- [ ] Make it so that NAs for unobserved cases in the dummy outcomes case don't
      cause hiccups; also, document this in na.action

- [ ] Make general ~makeSDs~ and ~actionsToOutcomes~ functions

- [ ] Be consistent in use of ~if (type == "agent")~ vs ~if (type == "private")~


* egame12

- [ ] Add an example to the ~predict.strat12~ function, preferably one using
      predicted probabilities the way political scientists normally do

- [ ] Add something so that you can fix variance terms to something other than 1
      in ~strat12~?  This would be more consistent with behavior in ~ultimatum~

- [ ] Rewrite gradient function along lines of others


* egame122

- [ ] Documentation!

- [ ] Add fixed utilities and bootstrapping


* ultimatum

- [X] Try actually running the model with only one thing on the left-hand side

- [ ] The gradient still seems a bit sketchy --- run Monte Carlos with a
      substantial amount of zeroes and Qs in the dependent variable to make sure
      everything is OK when using it

- [ ] Change the gradient to use log(s2)

- [ ] Fix how ~print.strat~ deals with the variance terms

- [ ] Add indicator (to be printed with results) for when the only outcome being
      considered is the offer (i.e., not acceptance)

- [ ] Check that ~ultimatum~ works with ~predProbs~

- [ ] Allow for different ~maxOffer~ in each observation
